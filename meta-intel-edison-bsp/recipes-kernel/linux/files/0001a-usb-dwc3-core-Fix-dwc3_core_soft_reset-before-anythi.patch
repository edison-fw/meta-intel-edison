From 904a16c9c02a5c24713ee5711d2966b35422b9d0 Mon Sep 17 00:00:00 2001
From: Ferry Toth <ftoth@exalondelft.nl>
Date: Tue, 17 Oct 2023 23:19:55 +0200
Subject: [PATCH 1/1] usb: dwc3: core: Fix dwc3_core_soft_reset before anything
 else

Before an ULPI PHY can be enumerated first the dwc3 core (device side) and PHY
needs to be reset by dwc3_core_soft_reset() as described in 58a0f23fddd0
("USB: DWC3: Issue device soft reset before core soft reset")

commit 98112041bcca ("usb: dwc3: core: Fix ULPI PHYs and prevent phy_get/ulpi_init during suspend/resume")
broke this.

Fix this by preceeding / moving dwc3_core_soft_reset() before dwc3_core_ulpi_init()
which enumerates and register the PHY.

Fixes: 98112041bcca ("usb: dwc3: core: Fix ULPI PHYs and prevent phy_get/ulpi_init during suspend/resume")
Signed-off-by: Ferry Toth <ftoth@exalondelft.nl>
---
 drivers/usb/dwc3/core.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)
Signed-off-by: Ferry Toth <ftoth@exalondelft.nl>
---
 drivers/usb/dwc3/core.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index d68958e151a7..7a514ff36f3c 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -1082,12 +1082,13 @@ static int dwc3_core_init(struct dwc3 *dwc)
 		return ret;
 
 	if (!dwc->ulpi_ready) {
+		ret = dwc3_core_soft_reset(dwc);
+		if (ret)
+			return ret;
 		ret = dwc3_core_ulpi_init(dwc);
 		if (ret) {
-			if (ret == -ETIMEDOUT) {
-				dwc3_core_soft_reset(dwc);
+			if (ret == -ETIMEDOUT)
 				ret = -EPROBE_DEFER;
-			}
 			return ret;
 		}
 		dwc->ulpi_ready = true;
-- 
2.39.2

